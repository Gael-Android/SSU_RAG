services:
  ssu-rag:
    build: .
    container_name: SSU_RAG_PROD
    ports:
      - "8888:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DOCKER_ENV=production
      - MILVUS_HOST=milvus
    volumes:
      - ./data:/app/data
    depends_on:
      - milvus
    networks:
      - ssu-rag-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: SSU_RAG_FRONTEND_PROD
    ports:
      - "3001:80"
    networks:
      - ssu-rag-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: SSU_RAG_NGINX
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - ssu-rag
      - frontend
    networks:
      - ssu-rag-network
    restart: unless-stopped

  milvus:
    image: milvusdb/milvus:v2.3.2
    container_name: milvus-standalone-prod
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "127.0.0.1:19530:19530"  # 로컬에서만 접근
    depends_on:
      - etcd
      - minio
    networks:
      - ssu-rag-network
    restart: unless-stopped

  attu:
    image: zilliz/attu:latest
    container_name: attu-prod
    environment:
      - MILVUS_URL=milvus:19530
    ports:
      - "127.0.0.1:18000:3000"  # 로컬에서만 접근
    depends_on:
      - milvus
    networks:
      - ssu-rag-network
    restart: unless-stopped

  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    container_name: milvus-etcd-prod
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - ssu-rag-network
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio-prod
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data
    ports:
      - "127.0.0.1:9001:9000"  # 로컬에서만 접근
    networks:
      - ssu-rag-network
    restart: unless-stopped

volumes:
  milvus_data:
  etcd_data:
  minio_data:

networks:
  ssu-rag-network:
    driver: bridge
